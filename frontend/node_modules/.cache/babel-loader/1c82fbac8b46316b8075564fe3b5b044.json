{"ast":null,"code":"import Axios from 'axios';\nimport data from '../data.js';\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL, PRODUCT_REVIEW_CREATE_REQUEST, PRODUCT_REVIEW_CREATE_SUCCESS, PRODUCT_REVIEW_CREATE_FAIL } from '../constants/productConstants';\nexport const listProducts = ({\n  pageNumber = '',\n  seller = '',\n  name = '',\n  category = '',\n  order = '',\n  min = 0,\n  max = 0,\n  rating = 0\n}) => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const listProductCategories = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/categories`);\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createReview = (productId, review) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_REVIEW_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["D:/vs code/OUTSTANDING-3/frontend/src/actions/productActions.js"],"names":["Axios","data","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_FAIL","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_SUCCESS","PRODUCT_REVIEW_CREATE_FAIL","listProducts","pageNumber","seller","name","category","order","min","max","rating","dispatch","type","get","payload","error","message","listProductCategories","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","delete","createReview","review"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport data from '../data.js'\r\nimport {\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_CATEGORY_LIST_SUCCESS,\r\n    PRODUCT_CATEGORY_LIST_REQUEST,\r\n    PRODUCT_CATEGORY_LIST_FAIL,\r\n    PRODUCT_REVIEW_CREATE_REQUEST,\r\n    PRODUCT_REVIEW_CREATE_SUCCESS,\r\n    PRODUCT_REVIEW_CREATE_FAIL,\r\n} from '../constants/productConstants';\r\n\r\nexport const listProducts = ({\r\n    pageNumber = '',\r\n    seller = '',\r\n    name = '',\r\n    category = '',\r\n    order = '',\r\n    min = 0,\r\n    max = 0,\r\n    rating = 0,\r\n}) => async(dispatch) => {\r\n    dispatch({\r\n        type: PRODUCT_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.get(\r\n            `/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`\r\n        );\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const listProductCategories = () => async(dispatch) => {\r\n    dispatch({\r\n        type: PRODUCT_CATEGORY_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.get(`/api/products/categories`);\r\n        dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const detailsProduct = (productId) => async(dispatch) => {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    try {\r\n        const { data } = await Axios.get(`/api/products/${productId}`);\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,\r\n        });\r\n    }\r\n};\r\nexport const createProduct = () => async(dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.post(\r\n            '/api/products', {}, {\r\n                headers: { Authorization: `Bearer ${userInfo.token}` },\r\n            }\r\n        );\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data.product,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message;\r\n        dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n    }\r\n};\r\nexport const updateProduct = (product) => async(dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.put(`/api/products/${product._id}`, product, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message;\r\n        dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n    }\r\n};\r\nexport const deleteProduct = (productId) => async(dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = Axios.delete(`/api/products/${productId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message;\r\n        dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n    }\r\n};\r\nexport const createReview = (productId, review) => async(\r\n    dispatch,\r\n    getState\r\n) => {\r\n    dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.post(\r\n            `/api/products/${productId}/reviews`,\r\n            review, {\r\n                headers: { Authorization: `Bearer ${userInfo.token}` },\r\n            }\r\n        );\r\n        dispatch({\r\n            type: PRODUCT_REVIEW_CREATE_SUCCESS,\r\n            payload: data.review,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message;\r\n        dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}